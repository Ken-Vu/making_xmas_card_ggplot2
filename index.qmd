---
title: "Drawing a Christmas card with the ggplot2 package"
author: "<br><br><strong>Ken Vu</strong><br> Cascadia R Conference | June 22, 2024"
format:
  revealjs: 
    width: 1920
    height: 1080
#    theme: [default, custom.scss]
    slide-number: true
editor: visual
fontsize: 48pt
from: markdown+emoji
---

# I. Introduction

## Around the time I got my MS in Stats, I was slowly losing my R knowledge

::: columns
::: {.column .medium width="50%"}
![](images/intro_grad.jpg){width="75%"}
:::

::: {.column .medium width="50%"}
![](images/intro_burnout.jpg){width="85%"}
:::
:::

## I wanted to spread joy for the Christmas holiday season

![](images/intro_xmas_conf.jpg)

## Plus, #rtistry examples inspired me to draw using R.
::: columns
::: {.column width="50%"}

@djnavarro's [flametree](https://github.com/djnavarro/flametree)
![](images/djnavarro_rtistry.png){width="110%"}

:::
::: {.column width="50%"}

@cutterkom's [generativeart](https://github.com/cutterkom/generativeart)
![](images/cutterkom_genart.png){width="50%"}

:::

:::

## 
![](images/step3_wanna_build_snowman.gif){.image-center}

## So what did I decide to do then?

-   **BUILD A CHRISTMAS CARD...WITH R CODE!!!** 
![](images/xmas_card_done.png){width="60%"}

# II. The Design Process
## a. Visualize the outcome
::: columns
::: {.column .medium width="100%"}
![](images/design_step1_holiday_card_draft.jpg){width="40%"}
:::
:::

## b. Picking my R packages
Chose the ggplot2 package due to popularity, familiarity, and customization

![](images/step2_pick_ggplot2.png)

## c. Picking my R packages 
-   Additional packages
    -   `extrafont`: for loading in custom fonts
    -   `dplyr`: for wrangling and working with large amounts of data

![](images/dplyr_hex.jpg)

## c. Picking my R packages
```{r, echo=T, eval=T}
library(ggplot2) # for data visualization
library(extrafont) # for loading custom fonts
library(dplyr) # for wrangling data frames
```

# III. The grammar of graphics
## a. The grammar of graphics
- The **grammar of graphics** is a way of organizing and prepping how data get visualized
- It usually consists of three major elements
    - The **data**
    - The **aesthetic mapping**: arranging where to display your data
    - The **geometries**: how to display your data (i.e., `ggplot2` functions)
    
## b. The layout of the plotting area
`ggplot2` displays data on a coordinate system with an x-axis and y-axis

![](images/ggplot2_coordiante_sys_axes.jpg){width="100%"}

## b. The layout of the plotting area
- Points written in the format **(x,y)**

![](images/ggplot2_coordiante_sys_points.jpg){width="50%}

## b. Sketch's coordinates meant for ggplot2's coordinate system

![](images/design_step1_holiday_card_draft.jpg){width="10%"}

# IV. How to plot in ggplot2
## Let's show by drawing bare top part of Christmas tree in this card
![](images/xmas_card_done.png)

## STEP 1: Pick a `ggplot2` function
- Ex. `geom_point()` for scatterplots, `geom_polygon()` for shapes   
```{r, echo=F, eval=T, warning=F}
library(ggpubr)
plt1 <- ggplot(mtcars, aes(x=mpg, y=disp)) + geom_point()
plt2 <- ggplot(data =  
                 dplyr::tribble(
                      ~x, ~y,
                       0,  0,
                       -3, 5,
                       0, 10,
                       3, 5
                 )
                 
                 , mapping = aes(x=x, y=y)) + geom_polygon()

ggpubr::ggarrange(plt1, plt2, ncol = 2)
```

## STEP 2: Create your data
- Measurements on sketch translate into points
![](images/sketch_to_r_code_pts.jpg){width="75%"}
```{r, echo=F, eval=T}
xmas_tree <- tribble(
  ~x, ~y,
   0, 20,
  -3, 15,
  -2, 15,
-4.5, 10, 
  -3, 10,
  -6,  5,
   6,  5,
   3, 10,
 4.5, 10,
   2, 15,
   3, 15
   
)
```


## STEP 3: Start plotting
Drawing out the top part of the tree
![](images/xmas_tree_top_from_code_to_graph.jpg){width="120%}
```{r, eval=F, echo=F}
ggplot() + 
  
  # DRAWING TREE
  geom_polygon(
      
      # where to get data
      data = xmas_tree,  
      
      # where to display data
      mapping = aes(x=x, y=y), 
      
      # makes inside of tree green
      fill = "#009E73"  
)
```


## TA DA!
![](images/xmas_card_done.png)

# III. Conclusion

Three takeaways from this Christmas card project

## 1. I learned more about how the `ggplot2` library works
![](images/step2_pick_ggplot2.png) 

## 2. I got better at staying organized with complex projects
![](images/schedule-planning-concept.jpg){width="75%"}


## 3. Be yourself as you KEN do it!

![](images/conclusion_3_kenough.jpg)

## Thank you so much!

::: columns
::: {.column width="50%"}
Here's where to connect with me!

{{< fa brands mastodon size=xl >}} [\@kenvu777](https://fosstodon.org/@kenvu777)

{{< fa brands linkedin size=xl >}} [linkedin.com/in/kenvu1](https://www.linkedin.com/in/kenvu1)

{{< fa brands github size=xl >}} [Ken-Vu](https://github.com/Ken-Vu)

{{< fa solid display >}} [Slides](https://github.com/Ken-Vu/making_xmas_card_ggplot2)
:::

::: {.column width="50%"}
Scan to see all my links: ![](images/QR_code_LinktoKensLinktree.png){width="60%"}
:::
:::
